<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<case_conf>
    <case_classification
            case_classification_index="46"
            case_classification_tag="物理配置混合"
            case_classification_value="物理配置混合场景"
            case_classification_script_dir="basicio_function/raid50/physical_env_mix">
        <case_check_point
                case_check_point_index="10"
                case_check_point_value="使物理配置4kn的ssd盘raid50读写任务成功，数据一致性校验通过，系统正常"
                case_check_point_title="4kn_ssd"
                case_check_point_script_dir="4kn_ssd">
            <case_scene>
                <flag>4kn-ssd</flag>
                <io_pattern_parm>all</io_pattern_parm>
                <case_scene_context>
                    1. {pd_info}
                    2. raid50:pdperarray=3,strip={strip}，{wcache}{size}{direct}
                    3. {io_pattern_name}
                </case_scene_context>
            </case_scene>
            <case_pre_condition>
                NA
            </case_pre_condition>
            <case_steps>
                1. 设置控制卡MixSceneRaid5x.passthrough开关为{MixSceneRaid5x.passthrough}
                2. 查找{pd_info}
                3. 构建符合条件的虚拟盘：组建raid50，参数设置：pdperarray=3,strip={strip}{wcache}{size}{direct}
                4. 查看虚拟盘状态是否为Optimal
                5. 测试工具的对于虚拟盘的IO配置：{io_pattern}
                6. 测试工具开始进行两个IO业务
                7. 等待测试工具IO结束，查看IO是否成功 {io_pattern_io_check}
                8. 清理环境，删除虚拟盘
            </case_steps>
            <case_expect>
                1. 设置控制卡MixSceneRaid5x.passthrough开关成功
                2. 物理盘满足条件
                3. 组建虚拟盘成功
                4. 虚拟盘状态符合预期，为Optimal状态
                5. 测试工具的对于虚拟盘的IO配置成功
                6. 测试工具的IO业务成功开始
                7. IO正常结束，IO成功{io_pattern_io_check_expect}
                8. 恢复测试环境到初始状态
            </case_expect>
        </case_check_point>
        <case_check_point
                case_check_point_value="使物理配置4KN的SATA盘raid50读写任务成功，数据一致性校验通过，系统正常"
                case_check_point_title="4kn-sata"
                case_check_point_script_dir="4kn-sata">
            <case_scene>
                <flag>4kn-sata</flag>
                <io_pattern_parm>all</io_pattern_parm>
                <case_scene_context>
                    1. {pd_info}
                    2. raid50:pdperarray=3,strip={strip}，{wcache}{size}{direct}
                    3. {io_pattern_name}
                </case_scene_context>
            </case_scene>
            <case_pre_condition>
                NA
            </case_pre_condition>
            <case_steps>
                1. 设置控制卡MixSceneRaid5x.passthrough开关为{MixSceneRaid5x.passthrough}
                2. 查找{pd_info}
                3. 构建符合条件的虚拟盘：组建raid50，参数设置：pdperarray=3,strip={strip}{wcache}{size}{direct}
                4. 查看虚拟盘状态是否为Optimal
                5. 测试工具的对于虚拟盘的IO配置：{io_pattern}
                6. 测试工具开始进行两个IO业务
                7. 等待测试工具IO结束，查看IO是否成功 {io_pattern_io_check}
                8. 清理环境，删除虚拟盘
            </case_steps>
            <case_expect>
                1. 设置控制卡MixSceneRaid5x.passthrough开关成功
                2. 物理盘满足条件
                3. 组建虚拟盘成功
                4. 虚拟盘状态符合预期，为Optimal状态
                5. 测试工具的对于虚拟盘的IO配置成功
                6. 测试工具的IO业务成功开始
                7. IO正常结束，IO成功{io_pattern_io_check_expect}
                8. 恢复测试环境到初始状态
            </case_expect>
        </case_check_point>
        <case_check_point
                case_check_point_value="使物理配置4KN的SAS盘raid50读写任务成功，数据一致性校验通过，系统正常"
                case_check_point_title="4kn-sas"
                case_check_point_script_dir="4kn-sas">
            <case_scene>
                <flag>4kn-sas</flag>
                <io_pattern_parm>all</io_pattern_parm>
                <case_scene_context>
                    1. {pd_info}
                    2. raid50:pdperarray=3,strip={strip}，{wcache}{size}{direct}
                    3. {io_pattern_name}
                </case_scene_context>
            </case_scene>
            <case_pre_condition>
                NA
            </case_pre_condition>
            <case_steps>
                1. 设置控制卡MixSceneRaid5x.passthrough开关为{MixSceneRaid5x.passthrough}
                2. 查找{pd_info}
                3. 构建符合条件的虚拟盘：组建raid50，参数设置：pdperarray=3,strip={strip}{wcache}{size}{direct}
                4. 查看虚拟盘状态是否为Optimal
                5. 测试工具的对于虚拟盘的IO配置：{io_pattern}
                6. 测试工具开始进行两个IO业务
                7. 等待测试工具IO结束，查看IO是否成功 {io_pattern_io_check}
                8. 清理环境，删除虚拟盘
            </case_steps>
            <case_expect>
                1. 设置控制卡MixSceneRaid5x.passthrough开关成功
                2. 物理盘满足条件
                3. 组建虚拟盘成功
                4. 虚拟盘状态符合预期，为Optimal状态
                5. 测试工具的对于虚拟盘的IO配置成功
                6. 测试工具的IO业务成功开始
                7. IO正常结束，IO成功{io_pattern_io_check_expect}
                8. 恢复测试环境到初始状态
            </case_expect>
        </case_check_point>
        <case_check_point
                case_check_point_value="使物理配置512B的SSD盘raid50读写任务成功，数据一致性校验通过，系统正常"
                case_check_point_title="512b-ssd"
                case_check_point_script_dir="512b-ssd">
            <case_scene>
                <flag>512b-ssd</flag>
                <io_pattern_parm>all</io_pattern_parm>
                <case_scene_context>
                    1. {pd_info}
                    2. raid50:pdperarray=3,strip={strip}，{wcache}{size}{direct}
                    3. {io_pattern_name}
                </case_scene_context>
            </case_scene>
            <case_pre_condition>
                NA
            </case_pre_condition>
            <case_steps>
                1. 设置控制卡MixSceneRaid5x.passthrough开关为{MixSceneRaid5x.passthrough}
                2. 查找{pd_info}
                3. 构建符合条件的虚拟盘：组建raid50，参数设置：pdperarray=3,strip={strip}{wcache}{size}{direct}
                4. 查看虚拟盘状态是否为Optimal
                5. 测试工具的对于虚拟盘的IO配置：{io_pattern}
                6. 测试工具开始进行两个IO业务
                7. 等待测试工具IO结束，查看IO是否成功 {io_pattern_io_check}
                8. 清理环境，删除虚拟盘
            </case_steps>
            <case_expect>
                1. 设置控制卡MixSceneRaid5x.passthrough开关成功
                2. 物理盘满足条件
                3. 组建虚拟盘成功
                4. 虚拟盘状态符合预期，为Optimal状态
                5. 测试工具的对于虚拟盘的IO配置成功
                6. 测试工具的IO业务成功开始
                7. IO正常结束，IO成功{io_pattern_io_check_expect}
                8. 恢复测试环境到初始状态
            </case_expect>
        </case_check_point>
        <case_check_point
                case_check_point_value="使物理配置512B的SATA盘raid50读写任务成功，数据一致性校验通过，系统正常"
                case_check_point_title="512b-sata"
                case_check_point_script_dir="512b-sata">
            <case_scene>
                <flag>512b-sata</flag>
                <io_pattern_parm>all</io_pattern_parm>
                <case_scene_context>
                    1. {pd_info}
                    2. raid50:pdperarray=3,strip={strip}，{wcache}{size}{direct}
                    3. {io_pattern_name}
                </case_scene_context>
            </case_scene>
            <case_pre_condition>
                NA
            </case_pre_condition>
            <case_steps>
                1. 设置控制卡MixSceneRaid5x.passthrough开关为{MixSceneRaid5x.passthrough}
                2. 查找{pd_info}
                3. 构建符合条件的虚拟盘：组建raid50，参数设置：pdperarray=3,strip={strip}{wcache}{size}{direct}
                4. 查看虚拟盘状态是否为Optimal
                5. 测试工具的对于虚拟盘的IO配置：{io_pattern}
                6. 测试工具开始进行两个IO业务
                7. 等待测试工具IO结束，查看IO是否成功 {io_pattern_io_check}
                8. 清理环境，删除虚拟盘
            </case_steps>
            <case_expect>
                1. 设置控制卡MixSceneRaid5x.passthrough开关成功
                2. 物理盘满足条件
                3. 组建虚拟盘成功
                4. 虚拟盘状态符合预期，为Optimal状态
                5. 测试工具的对于虚拟盘的IO配置成功
                6. 测试工具的IO业务成功开始
                7. IO正常结束，IO成功{io_pattern_io_check_expect}
                8. 恢复测试环境到初始状态
            </case_expect>
        </case_check_point>
        <case_check_point
                case_check_point_value="使物理配置512B的SAS盘raid50读写任务成功，数据一致性校验通过，系统正常"
                case_check_point_title="512b-sas"
                case_check_point_script_dir="512b-sas">
            <case_scene>
                <flag>512b-sas</flag>
                <io_pattern_parm>all</io_pattern_parm>
                <case_scene_context>
                    1. {pd_info}
                    2. raid50:pdperarray=3,strip={strip}，{wcache}{size}{direct}
                    3. {io_pattern_name}
                </case_scene_context>
            </case_scene>
            <case_pre_condition>
                NA
            </case_pre_condition>
            <case_steps>
                1. 设置控制卡MixSceneRaid5x.passthrough开关为{MixSceneRaid5x.passthrough}
                2. 查找{pd_info}
                3. 构建符合条件的虚拟盘：组建raid50，参数设置：pdperarray=3,strip={strip}{wcache}{size}{direct}
                4. 查看虚拟盘状态是否为Optimal
                5. 测试工具的对于虚拟盘的IO配置：{io_pattern}
                6. 测试工具开始进行两个IO业务
                7. 等待测试工具IO结束，查看IO是否成功 {io_pattern_io_check}
                8. 清理环境，删除虚拟盘
            </case_steps>
            <case_expect>
                1. 设置控制卡MixSceneRaid5x.passthrough开关成功
                2. 物理盘满足条件
                3. 组建虚拟盘成功
                4. 虚拟盘状态符合预期，为Optimal状态
                5. 测试工具的对于虚拟盘的IO配置成功
                6. 测试工具的IO业务成功开始
                7. IO正常结束，IO成功{io_pattern_io_check_expect}
                8. 恢复测试环境到初始状态
            </case_expect>
        </case_check_point>
        <case_check_point
                case_check_point_value="使物理配置SSD盘raid50读写任务成功，数据一致性校验通过，系统正常"
                case_check_point_title="mix-ssd"
                case_check_point_script_dir="mix-ssd">
            <case_scene>
                <flag>mix-ssd</flag>
                <io_pattern_parm>all</io_pattern_parm>
                <case_scene_context>
                    1. {pd_info}
                    2. raid50:pdperarray=3,strip={strip}，{wcache}{size}{direct}
                    3. {io_pattern_name}
                </case_scene_context>
            </case_scene>
            <case_pre_condition>
                NA
            </case_pre_condition>
            <case_steps>
                1. 设置控制卡MixSceneRaid5x.passthrough开关为{MixSceneRaid5x.passthrough}
                2. 查找{pd_info}
                3. 构建符合条件的虚拟盘：组建raid50，参数设置：pdperarray=3,strip={strip}{wcache}{size}{direct}
                4. 查看虚拟盘状态是否为Optimal
                5. 测试工具的对于虚拟盘的IO配置：{io_pattern}
                6. 测试工具开始进行两个IO业务
                7. 等待测试工具IO结束，查看IO是否成功 {io_pattern_io_check}
                8. 清理环境，删除虚拟盘
            </case_steps>
            <case_expect>
                1. 设置控制卡MixSceneRaid5x.passthrough开关成功
                2. 物理盘满足条件
                3. 组建虚拟盘成功
                4. 虚拟盘状态符合预期，为Optimal状态
                5. 测试工具的对于虚拟盘的IO配置成功
                6. 测试工具的IO业务成功开始
                7. IO正常结束，IO成功{io_pattern_io_check_expect}
                8. 恢复测试环境到初始状态
            </case_expect>
        </case_check_point>
        <case_check_point
                case_check_point_value="使物理配置SATA盘raid50读写任务成功，数据一致性校验通过，系统正常"
                case_check_point_title="mix-sata"
                case_check_point_script_dir="mix-sata">
            <case_scene>
                <flag>mix-sata</flag>
                <io_pattern_parm>all</io_pattern_parm>
                <case_scene_context>
                    1. {pd_info}
                    2. raid50:pdperarray=3,strip={strip}，{wcache}{size}{direct}
                    3. {io_pattern_name}
                </case_scene_context>
            </case_scene>
            <case_pre_condition>
                NA
            </case_pre_condition>
            <case_steps>
                1. 设置控制卡MixSceneRaid5x.passthrough开关为{MixSceneRaid5x.passthrough}
                2. 查找{pd_info}
                3. 构建符合条件的虚拟盘：组建raid50，参数设置：pdperarray=3,strip={strip}{wcache}{size}{direct}
                4. 查看虚拟盘状态是否为Optimal
                5. 测试工具的对于虚拟盘的IO配置：{io_pattern}
                6. 测试工具开始进行两个IO业务
                7. 等待测试工具IO结束，查看IO是否成功 {io_pattern_io_check}
                8. 清理环境，删除虚拟盘
            </case_steps>
            <case_expect>
                1. 设置控制卡MixSceneRaid5x.passthrough开关成功
                2. 物理盘满足条件
                3. 组建虚拟盘成功
                4. 虚拟盘状态符合预期，为Optimal状态
                5. 测试工具的对于虚拟盘的IO配置成功
                6. 测试工具的IO业务成功开始
                7. IO正常结束，IO成功{io_pattern_io_check_expect}
                8. 恢复测试环境到初始状态
            </case_expect>
        </case_check_point>
        <case_check_point
                case_check_point_value="使物理配置SAS盘raid50读写任务成功，数据一致性校验通过，系统正常"
                case_check_point_title="mix-sas"
                case_check_point_script_dir="mix-sas">
            <case_scene>
                <flag>mix-sas</flag>
                <io_pattern_parm>all</io_pattern_parm>
                <case_scene_context>
                    1. {pd_info}
                    2. raid50:pdperarray=3,strip={strip}，{wcache}{size}{direct}
                    3. {io_pattern_name}
                </case_scene_context>
            </case_scene>
            <case_pre_condition>
                NA
            </case_pre_condition>
            <case_steps>
                1. 设置控制卡MixSceneRaid5x.passthrough开关为{MixSceneRaid5x.passthrough}
                2. 查找{pd_info}
                3. 构建符合条件的虚拟盘：组建raid50，参数设置：pdperarray=3,strip={strip}{wcache}{size}{direct}
                4. 查看虚拟盘状态是否为Optimal
                5. 测试工具的对于虚拟盘的IO配置：{io_pattern}
                6. 测试工具开始进行两个IO业务
                7. 等待测试工具IO结束，查看IO是否成功 {io_pattern_io_check}
                8. 清理环境，删除虚拟盘
            </case_steps>
            <case_expect>
                1. 设置控制卡MixSceneRaid5x.passthrough开关成功
                2. 物理盘满足条件
                3. 组建虚拟盘成功
                4. 虚拟盘状态符合预期，为Optimal状态
                5. 测试工具的对于虚拟盘的IO配置成功
                6. 测试工具的IO业务成功开始
                7. IO正常结束，IO成功{io_pattern_io_check_expect}
                8. 恢复测试环境到初始状态
            </case_expect>
        </case_check_point>

    </case_classification>
</case_conf>